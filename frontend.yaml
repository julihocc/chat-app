# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: jdk2py/frontend:latest
          env:
            - name: REACT_APP_BACKEND_HTTP_URL
              value: "http://a8736b4a9e0b04186b1c10b82a42be46-1178283415.us-east-1.elb.amazonaws.com:4000"
            - name: REACT_APP_BACKEND_WS_URL
              value: "ws://a8736b4a9e0b04186b1c10b82a42be46-1178283415.us-east-1.elb.amazonaws.com:4000"
            - name: REACT_APP_S3_BUCKET_NAME
              value: "marbles4078"
            - name: AWS_ACCESS_KEY_ID
              value: "AKIARYSRN25M3DRCYPER" # Replace with your actual value
            - name: AWS_SECRET_ACCESS_KEY
              value: "zyCRMIq8z5dk6f9ESZjgkj5LITfj2F1uTHr53kD+" # Replace with your actual value
            - name: AWS_REGION
              value: "us-east-1"
            - name: AWS_SDK_LOAD_CONFIG
              value: "1"
          ports:
            - containerPort: 3000

# Frontend Service
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: LoadBalancer
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: frontend

# Ingress Resource
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  annotations:
    nginx.ingress.kubernetes.io/enable-websocket: "true"
    nginx.ingress.kubernetes.io/websocket-services: "backend"
spec:
  ingressClassName: "nginx"
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 3000
